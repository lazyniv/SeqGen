#include<iostream>
#include<cstdlib>
#include"LFSR.h"

void wtf(std::vector<LFSR> regs1, std::vector<LFSR> regs2) {
	for (size_t i = 0; i < 32; i++) {
		for (size_t j = 0; j < 4; j++) {
			regs1[j].shift();
			regs2[j].shift();
		}
	}
	for (size_t i = 0; i < 655360; i++) {
		//size_t rly = 0;
		//for (size_t j = 0; j < 8; j++) {
		//	rly <<= 4;
		//	rly += (regs1[0].shift() ^ regs2[0].shift()) * 8 + (regs1[1].shift() ^ regs2[1].shift()) * 4 +
		//		(regs1[2].shift() ^ regs2[2].shift()) * 2 + (regs1[3].shift() ^ regs2[3].shift());
			//rly += cfr.shift();
		//}

		//std::cout << rly;

		unsigned char val = 0;
		unsigned char mask = 0xFE;

		for (size_t j = 0; j < 2; j++) {
			for (size_t k = 0; k < 4; k++) {
				val = (val << 1)&mask | (regs1[k].shift() ^ regs2[k].shift());
			}
		}

		std::cout << val;
	}
}

int main() {
	freopen("xortest.txt", "w", stdout);
	std::vector<LFSR> regs1 = {
		LFSR({0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,0}, {32,22,2,1}),
		LFSR({1,0,1,1,1,0,1,0,1,0,0,0,1,1,1,1,1,1,0,1,0,1,0,0,1,0,0,1,1,1,0,1}, { 32,16,7,2 }),
		LFSR({0,0,0,0,1,1,1,0,1,1,1,0,0,1,0,1, 0,1,0,1,0,1,1,1, 1,0,1,1,1,0,0,1}, {32,30,17,12,3,1}),
		LFSR({1,1,0,1,1,1,1,1, 0,0,1,1,0,0,0,1, 1,0,0,0,0,0,0,1, 0,1,1,0,1,0,0}, {31,3})
	};

	std::vector<LFSR> regs2 = {
		LFSR({0,1,0,1,1,1,1,1,1,1,0,0,0,1,0,1,1,0,0,1,1,1,0,0,0,1,1,0,1,0,0,0}, {32,30,17,12,3,1}),
		LFSR({0,0,0,0,1,1,1,0,1,1,1,0,0,1,0,1, 0,1,0,1,0,1,1,1, 1,0,1,1,1,0,0} , {31,3} ),
		LFSR({1,1,0,1,1,1,1,1, 0,0,1,1,0,0,0,1, 1,0,0,0,0,0,0,1, 0,1,1,0,1,0,1,0} ,  { 32,16,7,2 }),
		LFSR({1,0,1,1,1,0,1,0,1,0,0,0,1,1,1,1,1,1,0,1,0,1,0,0,1,0,0,1,1,1,0,1}, {32,22,2,1})
	};

	wtf(regs1, regs2);

	regs1[0].setState({ 1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,0,1,0,0,1,0,0,0,1,1,1,1,0,0,1,0 });
	regs1[1].setState({ 0,0,0,0,0,0,1,1,1,0,1,0,0,0,1,1,1,0,1,0,1,0,1,0,0,0,0,1,0,1,1,0 });
	regs1[2].setState({ 0,0,1,1,1,0,1,0,1,0,1,0,0,0,1,1,1,1,0,0,1,1,0,1,1,1,0,1,1,0,1,0 });
	regs1[3].setState({ 1,0,1,0,1,0,0,0,1,1,1,1,0,1,1,1,0,1,1,1,0,1,1,0,0,0,0,0,0,1,1 });
	regs2[0].setState({ 0,0,0,1,1,0,1,0,0,0,0,1,1,1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1 });
	regs2[1].setState({ 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0 });
	regs2[2].setState({ 1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1 });
	regs2[3].setState({ 1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,0,1,0,0,0,1,1,1,1,1,1,0,0,0,1 });

	wtf(regs1, regs2);

	return 0;
}